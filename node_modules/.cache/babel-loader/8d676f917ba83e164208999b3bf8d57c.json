{"ast":null,"code":"var _jsxFileName = \"/home/tanvir/Projects/portfolio-v2/src/components/experienceCard/ExperienceCard.js\";\nimport React, { useState, createRef } from \"react\";\nimport \"./ExperienceCard.css\";\nimport ColorThief from \"colorthief\";\nexport default function ExperienceCard({\n  cardInfo,\n  isDark\n}) {\n  const [colorArrays, setColorArrays] = useState([]);\n  const imgRef = createRef();\n\n  function getColorArrays() {\n    const colorThief = new ColorThief();\n    setColorArrays(colorThief.getColor(imgRef.current));\n  }\n\n  function rgb(values) {\n    return typeof values === \"undefined\" ? null : \"rgb(\" + values.join(', ') + \")\";\n  }\n  /*const GetDescBullets = ({ descBullets, isDark }) => {\n    return descBullets ? descBullets.map((item,i) => <li key={i} className={isDark ? \"subTitle dark-mode-text\": \"subTitle\"}>{item}</li>) : null\n  };*/\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: isDark ? \"experience-card-dark\" : \"experience-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: rgb(colorArrays)\n    },\n    className: \"experience-banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"experience-blurred_div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"experience-div-company\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"experience-text-company\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, cardInfo.company)), /*#__PURE__*/React.createElement(\"img\", {\n    crossOrigin: \"anonymous\",\n    ref: imgRef,\n    className: \"experience-roundedimg\",\n    src: cardInfo.companylogo,\n    alt: cardInfo.company,\n    onLoad: () => getColorArrays(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"experience-text-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: isDark ? \"experience-text-role dark-mode-text\" : \"experience-text-role\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, cardInfo.role), /*#__PURE__*/React.createElement(\"h5\", {\n    className: isDark ? \"experience-text-date dark-mode-text\" : \"experience-text-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, cardInfo.date), /*#__PURE__*/React.createElement(\"p\", {\n    className: isDark ? \"subTitle experience-text-desc dark-mode-text\" : \"subTitle experience-text-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, cardInfo.desc), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, cardInfo.descBullets.map((tech, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      className: \"software-skill-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: tech.fontAwesomeClassname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }));\n  }))));\n}","map":{"version":3,"sources":["/home/tanvir/Projects/portfolio-v2/src/components/experienceCard/ExperienceCard.js"],"names":["React","useState","createRef","ColorThief","ExperienceCard","cardInfo","isDark","colorArrays","setColorArrays","imgRef","getColorArrays","colorThief","getColor","current","rgb","values","join","background","company","companylogo","role","date","desc","descBullets","map","tech","i","fontAwesomeClassname"],"mappings":"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","sourcesContent":["import React, { useState, createRef } from \"react\";\nimport \"./ExperienceCard.css\";\nimport ColorThief from \"colorthief\";\n\nexport default function ExperienceCard({ cardInfo, isDark }) {\n  const [colorArrays, setColorArrays] = useState([]);\n  const imgRef = createRef();\n\n  function getColorArrays() {\n    const colorThief = new ColorThief();\n    setColorArrays(colorThief.getColor(imgRef.current));\n  }\n\n  function rgb(values) {\n    return typeof values === \"undefined\" ? null : \"rgb(\" + values.join(', ') + \")\";\n  }\n\n  /*const GetDescBullets = ({ descBullets, isDark }) => {\n    return descBullets ? descBullets.map((item,i) => <li key={i} className={isDark ? \"subTitle dark-mode-text\": \"subTitle\"}>{item}</li>) : null\n  };*/\n\n  return (\n    <div className={isDark ? \"experience-card-dark\":\"experience-card\"}>\n      <div style={{background: rgb(colorArrays) }} className=\"experience-banner\">\n        <div className=\"experience-blurred_div\"></div>\n        <div className=\"experience-div-company\">\n          <h5 className=\"experience-text-company\">{cardInfo.company}</h5>\n        </div>\n        \n        <img crossOrigin={\"anonymous\"} ref={imgRef} className=\"experience-roundedimg\" src={cardInfo.companylogo} alt={cardInfo.company} onLoad={() => getColorArrays()}/>\n      </div>\n      <div className=\"experience-text-details\">\n        <h5 className={isDark ? \"experience-text-role dark-mode-text\":\"experience-text-role\"}>{cardInfo.role}</h5>\n        <h5 className={isDark ? \"experience-text-date dark-mode-text\":\"experience-text-date\"}>{cardInfo.date}</h5>\n        <p className={isDark ? \"subTitle experience-text-desc dark-mode-text\":\"subTitle experience-text-desc\"}>{cardInfo.desc}</p>\n        <ul>\n          {cardInfo.descBullets.map((tech,i) => {\n            return (\n                <li key={i} className=\"software-skill-inline\">\n                  <i className={tech.fontAwesomeClassname}></i>\n                </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}