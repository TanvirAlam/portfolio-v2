{"ast":null,"code":"var _jsxFileName = \"/home/tanvir/Projects/portfolio-v2/src/containers/profile/Profile.js\";\nimport React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport ApolloClient, { gql } from \"apollo-boost\";\nimport { openSource } from \"../../portfolio\";\nimport Contact from \"../contact/Contact\";\nimport Loading from \"../loading/Loading\";\n\nconst renderLoader = () => /*#__PURE__*/React.createElement(Loading, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 28\n  }\n});\n\nconst GithubProfileCard = lazy(() => import('../../components/githubProfileCard/GithubProfileCard'));\nexport default function Profile() {\n  const [prof, setrepo] = useState([]);\n\n  function setProfileFunction(array) {\n    setrepo(array);\n  }\n\n  function getProfileData() {\n    const client = [];\n    /*new ApolloClient({\n    uri: \"https://api.github.com/graphql\",\n    request: (operation) => {\n    operation.setContext({\n    headers: {\n    authorization: `Bearer ${openSource.githubConvertedToken}`,\n    },\n    });\n    },\n    });*/\n\n    client.query({\n      query: gql`\n      {\n        user(login:\"${openSource.githubUserName}\") { \n          name\n          bio\n          isHireable\n          avatarUrl\n          location\n        }\n    }\n      `\n    }).then(result => {\n      setProfileFunction(result.data.user);\n    }).catch(function (error) {\n      console.log(error);\n      setProfileFunction(\"Error\");\n      console.log(\"Because of this Error Contact Section is Showed instead of Profile\");\n      openSource.showGithubProfile = \"false\";\n    });\n  }\n\n  useEffect(() => {\n    if (openSource.showGithubProfile === \"true\") {\n      getProfileData();\n    }\n  }, []);\n\n  if (openSource.display && openSource.showGithubProfile === \"true\" && !(typeof prof === 'string' || prof instanceof String)) {\n    return /*#__PURE__*/React.createElement(Suspense, {\n      fallback: renderLoader(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GithubProfileCard, {\n      prof: prof,\n      key: prof.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(Contact, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/home/tanvir/Projects/portfolio-v2/src/containers/profile/Profile.js"],"names":["React","useState","useEffect","lazy","Suspense","ApolloClient","gql","openSource","Contact","Loading","renderLoader","GithubProfileCard","Profile","prof","setrepo","setProfileFunction","array","getProfileData","client","query","githubUserName","then","result","data","user","catch","error","console","log","showGithubProfile","display","String","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,IAArC,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,OAAOC,YAAP,IAAuBC,GAAvB,QAAkC,cAAlC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,YAAY,GAAG,mBAAM,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA3B;;AACA,MAAMC,iBAAiB,GAAGR,IAAI,CAAC,MAAM,OAAO,sDAAP,CAAP,CAA9B;AACA,eAAe,SAASS,OAAT,GAAmB;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AACA,WAASc,kBAAT,CAA4BC,KAA5B,EAAmC;AACjCF,IAAAA,OAAO,CAACE,KAAD,CAAP;AACD;;AACD,WAASC,cAAT,GAA0B;AACxB,UAAMC,MAAM,GAAG,EAAf;AAAkB;;;;;;;;;;;AAWlBA,IAAAA,MAAM,CACHC,KADH,CACS;AACLA,MAAAA,KAAK,EAAEb,GAAI;;sBAEGC,UAAU,CAACa,cAAe;;;;;;;;;AAHnC,KADT,EAcGC,IAdH,CAcSC,MAAD,IAAY;AAChBP,MAAAA,kBAAkB,CAACO,MAAM,CAACC,IAAP,CAAYC,IAAb,CAAlB;AACD,KAhBH,EAiBGC,KAjBH,CAiBS,UAAUC,KAAV,EAAiB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAX,MAAAA,kBAAkB,CAAC,OAAD,CAAlB;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,oEAAZ;AACArB,MAAAA,UAAU,CAACsB,iBAAX,GAA+B,OAA/B;AACH,KAtBH;AAuBD;;AACD3B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,UAAU,CAACsB,iBAAX,KAAiC,MAArC,EAA6C;AAC3CZ,MAAAA,cAAc;AACf;AACF,GAJQ,EAIN,EAJM,CAAT;;AAKF,MAAIV,UAAU,CAACuB,OAAX,IAAsBvB,UAAU,CAACsB,iBAAX,KAAiC,MAAvD,IAAiE,EAAE,OAAOhB,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,YAAYkB,MAA9C,CAArE,EAA2H;AACvH,wBACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAErB,YAAY,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAEG,IAAzB;AAA+B,MAAA,GAAG,EAAEA,IAAI,CAACmB,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GANH,MAMS;AACL,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF","sourcesContent":["import React, { useState, useEffect ,lazy, Suspense } from \"react\";\nimport ApolloClient, { gql } from \"apollo-boost\";\nimport { openSource } from \"../../portfolio\";\nimport Contact from \"../contact/Contact\";\nimport Loading from \"../loading/Loading\";\n\nconst renderLoader = () => <Loading />;\nconst GithubProfileCard = lazy(() => import('../../components/githubProfileCard/GithubProfileCard'));\nexport default function Profile() {\n  const [prof, setrepo] = useState([]);\n  function setProfileFunction(array) {\n    setrepo(array);\n  }\n  function getProfileData() {\n    const client = [];/*new ApolloClient({\n      uri: \"https://api.github.com/graphql\",\n      request: (operation) => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`,\n          },\n        });\n      },\n    });*/\n\n    client\n      .query({\n        query: gql`\n      {\n        user(login:\"${openSource.githubUserName}\") { \n          name\n          bio\n          isHireable\n          avatarUrl\n          location\n        }\n    }\n      `,\n      })\n      .then((result) => {\n        setProfileFunction(result.data.user);\n      })\n      .catch(function (error) {\n          console.log(error);\n          setProfileFunction(\"Error\");\n          console.log(\"Because of this Error Contact Section is Showed instead of Profile\");\n          openSource.showGithubProfile = \"false\";\n      });\n  }\n  useEffect(() => {\n    if (openSource.showGithubProfile === \"true\") {\n      getProfileData();\n    }\n  }, []);\nif (openSource.display && openSource.showGithubProfile === \"true\" && !(typeof prof === 'string' || prof instanceof String)){  \n    return (\n      <Suspense fallback={renderLoader()}>\n        <GithubProfileCard prof={prof} key={prof.id} /> \n      </Suspense>\n       );\n  } else {\n    return <Contact />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}